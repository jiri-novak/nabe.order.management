// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using nabe.order.management.DAL;
using nabe.order.management.Enums;
using System;

namespace nabe.order.management.Migrations
{
    [DbContext(typeof(NabeDbContext))]
    partial class NabeDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("nabe.order.management.DAL.Entities.BillOfDelivery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("Code");

                    b.Property<int?>("InvoiceId");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.ToTable("BillOfDelivery");
                });

            modelBuilder.Entity("nabe.order.management.DAL.Entities.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DIC");

                    b.Property<long>("ICO");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("nabe.order.management.DAL.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CompanyId");

                    b.Property<int?>("ExternalDeliveryId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("ExternalDeliveryId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("nabe.order.management.DAL.Entities.ExternalDelivery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comments");

                    b.Property<string>("Description");

                    b.Property<int?>("InvoiceId");

                    b.Property<int>("State");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.ToTable("ExternalDelivery");
                });

            modelBuilder.Entity("nabe.order.management.DAL.Entities.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long?>("Code");

                    b.Property<DateTime>("ExpeditionDate");

                    b.Property<int>("LaserProgram");

                    b.Property<bool?>("SentForManufacturing");

                    b.HasKey("Id");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("nabe.order.management.DAL.Entities.BillOfDelivery", b =>
                {
                    b.HasOne("nabe.order.management.DAL.Entities.Invoice")
                        .WithMany("BillsOfDelivery")
                        .HasForeignKey("InvoiceId");
                });

            modelBuilder.Entity("nabe.order.management.DAL.Entities.Company", b =>
                {
                    b.OwnsOne("nabe.order.management.DAL.Entities.Address", "Address", b1 =>
                        {
                            b1.Property<int>("CompanyId");

                            b1.Property<string>("Municipality");

                            b1.Property<string>("State");

                            b1.Property<string>("Street");

                            b1.Property<int>("StreetNumber");

                            b1.Property<int>("ZipCode");

                            b1.ToTable("Companies");

                            b1.HasOne("nabe.order.management.DAL.Entities.Company")
                                .WithOne("Address")
                                .HasForeignKey("nabe.order.management.DAL.Entities.Address", "CompanyId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("nabe.order.management.DAL.Entities.Customer", b =>
                {
                    b.HasOne("nabe.order.management.DAL.Entities.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.HasOne("nabe.order.management.DAL.Entities.ExternalDelivery")
                        .WithMany("Customers")
                        .HasForeignKey("ExternalDeliveryId");
                });

            modelBuilder.Entity("nabe.order.management.DAL.Entities.ExternalDelivery", b =>
                {
                    b.HasOne("nabe.order.management.DAL.Entities.Invoice")
                        .WithMany("ExternalDeliveries")
                        .HasForeignKey("InvoiceId");
                });
#pragma warning restore 612, 618
        }
    }
}
